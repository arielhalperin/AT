// Include: https://www.joomlashine.com/cache/jsn_main-v4_pro/8c71a14c561b9a85b5c4ddcd4d32447a.js
// Include: https://www.joomlashine.com/cache/jsn_main-v4_pro/bca1120028f363b1776a643bf3ff4a8d.js



/* FILE: /components/com_lightcart/assets/js/lightcart.js */
 /**
 * @author JoomlaShine.com Team
 * @copyright JoomlaShine.com
 * @link joomlashine.com
 * @package JSN LigtCart
 * @version 1.1
 * @license http://www.gnu.org/copyleft/gpl.html GNU/GPL
 */
var objReg = new RegExp("1.2");
var mtMatch = objReg.exec(MooTools.version);

var LightCart = {
	init: function() {
	},
	RememberPaymethod:function(value){
		var settings = { checked: null};
		var HashCookie = new Hash.Cookie('HashCookieRememberPayMethod');	
		settings['checked'] = value;
		HashCookie.extend(settings);
	},
	GetRememberPaymethod:function(){
		var HashCookie = new Hash.Cookie('HashCookieRememberPayMethod');
		return HashCookie.get('checked');
	},
	AddFreeProductToCart:function(purchase, token, hash, loginStatus, category, action, label, value, root, redirectUrl){
		
		try 
		{
			//_gaq.push(['_trackEvent', category, action, label]);
			//ga('send', 'event', category, action, label, 0);
			dataLayer.push({
				  'event': 'addToCart',
				  'ecommerce': {
				    'add': {                                
				      'products': [{                        
				          'name': label,
				          'id': purchase,
				          'price': 0,
				          'category': category,
				          'quantity': 1
				       }]
				    }
				  }
				});			
		}
		catch(e)
		{
			if (window.console && window.console.log) 
			{
				console.log(e.message)
			}			
		}	
		
		if ("https:" == document.location.protocol)
		{
			var url 		= root + 'index.php?option=com_lightcart&view=vcart&task=vcart.addfreeproduct&purchase='+purchase+'&'+token+'=1&tmpl=component';	
		}
		else
		{
			var url 		= root.replace('https', 'http') + 'index.php?option=com_lightcart&view=vcart&task=vcart.addfreeproduct&purchase='+purchase+'&'+token+'=1&tmpl=component';
		}
		
		if (loginStatus)
		{
			if ("https:" == document.location.protocol)
			{
				redirectUrl = root + 'index.php?option=com_lightcart&view=checkoutforfree&task=checkoutforfree.checkOutAsCustomer&'+token+'=1&tmpl=component';	
			}
			else
			{
				redirectUrl = root.replace('https', 'http') + 'index.php?option=com_lightcart&view=checkoutforfree&task=checkoutforfree.checkOutAsCustomer&'+token+'=1&tmpl=component';
			}
		}

		var ajax = new Request({
			url: url,
			method: 'get',
			onComplete: function() {			
				if(!loginStatus)
				{
					JSNSqueezeBox.initialize({handler: 'iframe', size: {x: 750, y: 500}, onOpen: function () {document.body.style.overflow="hidden"; this.overlay.setStyles({width: '100%'});}, onClose: function () {document.body.style.overflow="auto";}});
					JSNSqueezeBox.options.url = redirectUrl + '&purchase=' + purchase;
					JSNSqueezeBox.options.jsnlcClose = true;
					JSNSqueezeBox.fromElement();
				}
				else
				{
					window.top.location = redirectUrl;
				}
			}
		});		
		ajax.send();
	},	
	RefreshCookie:function(c_name){
		var spans = window.parent.$$('.jsnlc-viewcart-value');	
		var divs = window.parent.$$('.jsnlc-viewcart');
		if (document.cookie.length > 0)
		{			
		  c_start=document.cookie.indexOf(c_name + "=");
		  if (c_start!=-1){
			c_start=c_start + c_name.length+1;
			c_end=document.cookie.indexOf(";",c_start);
			if (c_end==-1) c_end=document.cookie.length;
				var cookieStr = unescape(document.cookie.substring(c_start,c_end));
				
				if(cookieStr.length < 0){
		   			divs.each(function(div, i) 
					{
						divs[i].setStyle('display', 'block');						
						try 
						{
							spans[i].innerHTML = 0 + '&nbsp;';
						}
						catch(e){}						
					});
					return;
				}else{
					var explodeStr = cookieStr.split('|');
					try
					{
						var index = explodeStr.indexOf('-1:1');
						explodeStr.splice(index, 1);
					}
					catch(e){}					
					divs.each(function(div, i) 
					{
						divs[i].setStyle('display', 'block');
						try 
						{
							spans[i].innerHTML = explodeStr.length;
						}
						catch(e){}
					});
					return;
				}
		   }		   
		   else
		   {
	   			divs.each(function(div, i) 
				{
					var className = div.className;
					if(div.className.indexOf('hidden') != -1)
					{
						div.setStyle('display', 'none');
					}
					else
					{
						div.setStyle('display', 'block');
					}
					try 
					{
						spans[i].innerHTML = 0;
					}
					catch(e){}
				});	
		   		return;
		   }
		}
	},
	
	ViewCart:function(root){		
		var url = root + 'index.php?option=com_lightcart&view=vcart&tmpl=component';
		JSNSqueezeBox.initialize({handler: 'iframe', size: {x: 750, y: 600}, onOpen: function () {document.body.style.overflow="hidden"; this.overlay.setStyles({width: '100%'});}, onClose: function () {document.body.style.overflow="auto";}});
		JSNSqueezeBox.options.url = url;
		JSNSqueezeBox.fromElement();			
	},
	
	AuthenticateJoomlaUser:function(token, str){
		
		var options 	= {};
		var username    = $('return-username').value;
		var userpass    = $('return-password').value;
		var url 		= jsnlcRootPath + 'index.php?option=com_lightcart&view=checkout&task=checkout.authenticatejoomlauser';

		options ['username'] = username;
		options ['password'] = userpass;
		options [token] 	 = 1;
		var ajax = new Request.JSON({
			url: url,
			method: 'post',
			data:options,
			onSuccess: function(response) {	
				if (response.result)
				{
					if (str != '')
					{
						//_gaq.push(['_trackPageview', str]);
						//ga('send', 'pageview', str);
					}	
					
					$('frmCheckOut').submit();
					return true;
				}
				else
				{
					alert(response.errormsg +'\n'+response.message);	
					return false;
				}										
			}
		});		
		ajax.send();			
	},
	AddLicense:function(){
		$('jsnlc-adddomain').setStyle('display', 'none');
		$('form-adddomain').setStyle('display', '');
	},
	CancelAddDomain:function(){
		$('jsnlc-adddomain').setStyle('display', '');
		$('form-adddomain').setStyle('display', 'none');
		//$('license_domain').value = '';
	},
	ChooseCountry:function(){
		var value = $('country').options[$('country').selectedIndex].value;
		if(value == 'USA'){
			$('state').setStyle('display', '');	
			$('state_input').setStyle('display', 'none');	
			$('state_input').value='';
			
		}else{
			$('state').setStyle('display', 'none');	
			$('state_input').setStyle('display', '');	
			$('state_input').value='';
		}
	},	
	isExistedUser:function(token, str){
		var options 	= {};
		var username    = $('username').value;
		var email    	= $('email').value;
		var url 		= jsnlcRootPath + 'index.php?option=com_lightcart&view=checkout&task=checkout.isexisteduser';

		options ['username'] 	= username;
		options ['email'] 		= email;
		options [token] 	 	= 1;	
		var ajax = new Request.JSON({
			url: url,
			method: 'post',
			data:options,
			onSuccess: function(response) {			
				if (response.result)
				{
					if (str != '')
					{
						//_gaq.push(['_trackPageview', str]);
						//ga('send', 'pageview', str);
					}					
					$('frmCheckOut').submit();
					return true;
				}
				else
				{
					alert(response.errormsg +'\n'+response.message);	
					return false;
				}									
			}
		});		
		ajax.send();		
	},
	Tooltip:function (){		
			var myTips2 = new MooTips($$('.toolTipImgDOM'), {
				className: 'jsnlc-tooltip',
				offsets: {'x':-200,'y':25},
				initialize:function(){				
					this.fx = new Fx.Tween(this.toolTip, {duration: 0, wait: false});
				},
				onShow: function(toolTip) {
				// this.fx.start('opacity',0,1);
					this.toolTip.fade('show')
				},
				onHide: function(toolTip) {
					//this.fx.start('opacity',0,0);
					this.toolTip.fade('hide')
				}
			});	
			
	},
	TooltipLicense:function (){		
		var myTips2 = new MooTips($$('.toolTipLicenseDOM'), {
			className: 'jsnlc-tooltip',
			offsets: {'x':-240,'y':-135},
			fixed:true,
			initialize:function(){				
				this.fx = new Fx.Tween(this.toolTip, {duration: 0, wait: false});
			},
			onShow: function(toolTip) {
			 //this.fx.start('opacity',0,1);
				this.toolTip.fade('show')
			},
			onHide: function(toolTip) {
				//this.fx.start('opacity',0,0);
				this.toolTip.fade('hide')
			}
		});	
    },	
	DeleteOrder:function (url, msg){	
		var confi=confirm(msg);
		if (confi==true)
		{
			window.location.href = url;
			return;
		}
		return;
	},
	setSliderUpgradeProduct:function(){			
		var index = 0;
		$$('.jsnlc-upgrade-panel').each(function(item, i){
			
			var collapsible = new Fx.Slide( item.getElement('.jsnlc-upgrade-pane-slider'), { 
				duration: 300,
				transition: Fx.Transitions.linear
			});	
			var itemLink = item.getElement('.jsnlc-upgrade-title');
			itemLink.addEvent( 'click', function(){
				collapsible.toggle();
	        	if(itemLink.className == "jsnlc-upgrade-title"){
	        		itemLink.className = "jsnlc-upgrade-title active";
	        		itemLink.getElement('.jsn-link-close').style.display = '';
	        		itemLink.getElement('.jsn-link-upgrade').style.display = 'none';
				}else{						
					itemLink.className = "jsnlc-upgrade-title";
					itemLink.getElement('.jsn-link-close').style.display = 'none';
					itemLink.getElement('.jsn-link-upgrade').style.display = '';
				}				
				return false;
			});			
			item.getElement('.jsn-link-close').style.display = 'none';
			collapsible.hide();				
		});			
	},
	setSliderOrder:function(type, expand){			
		var index = 0;
		var collapsibles = new Array();
		if(type == 'accordion')
		{
			var headings = $$('#jsnlc-order-detail div h3');
			var icons = $$('#jsnlc-order-detail div h3 i');
			var list = $$('#jsnlc-order-detail div div.jpane-slider');
			headings.each( function(heading, i) 
			{
		        var collapsible = new Fx.Slide(list[i], {
		                duration: 300,
		                transition: Fx.Transitions.linear
		        });
		        collapsibles[i] = collapsible;
		        heading.addEvent('click', function(){
		        	collapsible.toggle();
		        	if(heading.className == "title jpane-toggler"){
		        		heading.className = "title jpane-toggler-down";		        		
					}else{						
						heading.className = "title jpane-toggler";
					}		        	
					collapsible.addEvent('onComplete', function() {				
						collapsible.element.style.height = 'auto';
						collapsible.wrapper.style.height = 'auto';
					});			        	
				    for(var j = 0; j < collapsibles.length; j++){
			            if(j!=i) 
			            {
			            	collapsibles[j].slideOut();
			            	headings[j].className = "title jpane-toggler";
			            }			         
				    }					    
				    return false;
				});
		       collapsible.hide();	       
			});		
		}else{
			$$('.panel').each(function(item, i){
				var collapsible = new Fx.Slide( item.getElement('.jpane-slider'), { 
					duration: 300,
					transition: Fx.Transitions.linear
				});	
				collapsibles[i] = collapsible;	
				item.getElement('.title').addEvent( 'click', function(){
					collapsible.toggle();
					return false;
				});	
				collapsible.hide();			
				collapsible.addEvent('onStart', function() {	
				var h3 = item.getElement('h3', item);
				var icon =  item.getElement('i', item);
				
				if(h3){
					if(h3.className == "title jpane-toggler"){
						h3.className = "title jpane-toggler-down";
						item.className = "panel expanded";
					}else{
						h3.className = "title jpane-toggler";
						item.className = "panel";
						
					}
				}
				
				if(icon){
					if(icon.className == "fa fa-minus"){
						icon.className = "fa fa-plus";
						
					}else{
						icon.className = "fa fa-minus";
						
					}
				}
				});
				
				collapsible.addEvent('onComplete', function() {									
					var h3 = item.getElement('h3', item);
					if(h3.className == "title jpane-toggler")
					{
						//collapsible.element.style.height = 'auto';
						collapsible.wrapper.style.height = '0px';
					}
					else
					{
						//collapsible.element.style.height = '0px';
						collapsible.wrapper.style.height = 'auto';
					}	
				});				
			});
		}
		if (expand)
		{
			$$( '.panel' ).each(function(item, i){
				collapsibles[i].show();
				//collapsibles[i].element.style.height = 'auto';
				collapsibles[i].wrapper.style.height = 'auto';
				item.getElement( '.title' ).className = "title jpane-toggler-down";
				item.getElement( '.fa' ).className = "fa fa-minus";
				item.className = "panel expanded";
			});			
		}
		$('collapse-all').addEvent('click', function(){
			$$('.panel').each(function(item, i){	
				collapsibles[i].hide();
				item.getElement( '.title' ).className = "title jpane-toggler";
				item.getElement( '.fa' ).className = "fa fa-plus";
				item.className = "panel";
			});
			return false;				
		});
		$('expand-all').addEvent('click', function(){
			$$( '.panel' ).each(function(item, i){
				collapsibles[i].show();
				//collapsibles[i].element.style.height = 'auto';
				collapsibles[i].wrapper.style.height = 'auto';
				item.getElement( '.title' ).className = "title jpane-toggler-down";
				item.getElement( '.fa' ).className = "fa fa-minus";
				item.className = "panel expanded";
			});			
		});	
		
	},
	setSliderFileDesciption:function(){			
		var index = 0;
		$$('.jsnlc-download-file-panel').each(function(item, i){		
			if (item.getElement('.jsnlc-upgrade-pane-slider') != undefined) 
			{
				var collapsible = new Fx.Slide(item.getElement('.jsnlc-upgrade-pane-slider'), { 
					duration: 100,
					transition: Fx.Transitions.linear
				});
				var itemLink = item.getElement('.jsn-link-view-desc-file');
				if(itemLink != null) {
					itemLink.addEvent( 'click', function() {
						collapsible.toggle();
			        	if (itemLink.className == "jsn-link-view-desc-file"){
			        		itemLink.className = "jsn-link-view-desc-file active";
			        		item.getElement('.jsnlc-download-filename').className = "jsnlc-download-filename selected";
			        		//itemLink.innerHTML = '[-]';
						}else{						
							itemLink.className = "jsn-link-view-desc-file";
							item.getElement('.jsnlc-download-filename').className = "jsnlc-download-filename";
							//itemLink.innerHTML = '[+]';
						}			
						return false;
					});
					collapsible.hide();		
				}
			}
		});			
	},
	SwitchLinkSelectDomain:function(token, root) {
		var orderID 				= document.getElementById('order_id');
		var orderIDValue    		= orderID.options[orderID.selectedIndex].value;
		var purchaseUnitID 			= document.getElementById('product_unit_id');
		var purchaseUnitIDValue 	= purchaseUnitID.options[purchaseUnitID.selectedIndex].value;
		var orderItemValue			= 0;
		var domainSupportStatus		= 0;
		if(purchaseUnitIDValue != 0)
		{	
			for(var i = 0; i < arrayPurchaseUnitID.length; i++)
			{
				if(arrayPurchaseUnitID[i] == purchaseUnitIDValue && arrayOrderID[i] == orderIDValue)
				{
					orderItemValue 		= arrayOrderItemID[i];
					domainSupportStatus = arrayDomainSupportStatus[i];
				}
			}
		}		
		var linkGetDomain   = document.getElementById('link_select_domain');
		document.getElementById('registered_domain').value = '';		
		
		if(orderItemValue != 0 && orderIDValue != 0)
		{
			if(domainSupportStatus != 0)
			{
				linkGetDomain.href = root + 'index.php?option=com_lightcart&view=domainsupports&layout=selectdomain&order_id='+orderIDValue+'&order_item_id='+orderItemValue+'&'+token+'=1&tmpl=component';
				document.getElementById('jsn_lc_registered_domain_wrapper').style.display = '';
				return true;
			}
			else
			{
				linkGetDomain.href = '';	
				document.getElementById('jsn_lc_registered_domain_wrapper').style.display = 'none';
				return false;				
			}
		}
		else
		{
			document.getElementById('jsn_lc_registered_domain_wrapper').style.display = 'none';
		}
	},
	drawOrderComboBox:function(token, root)
	{
		var purchaseUnitID 			= document.getElementById('product_unit_id');
		
		var purchaseUnitIDValue 	= purchaseUnitID.options[purchaseUnitID.selectedIndex].value;
		var orderID 	    		= document.getElementById('order_id');	
		var tmp						= 0;	
		var orderField 				= document.getElementById('jsn_lc_contactform_order_field');
		if (orderID.length > 0)
		 {
			 for(i = orderID.length; i >= 0; i--)
			 {
				 orderID.remove(i + 1);
			 }
		 }
		if(purchaseUnitIDValue != 0)
		{	
			for(var i = 0; i < arrayPurchaseUnitID.length; i++)
			{
				if(arrayPurchaseUnitID[i] == purchaseUnitIDValue)
				{
					tmp++;
					var elOptNew = document.createElement('option');
					elOptNew.text = arrayOrderOrderCode[i];
					elOptNew.value = arrayOrderID[i];
					try 
					{
						orderID.add(elOptNew, null);
					}
					catch(ex) 
					{
						orderID.add(elOptNew); 
					}			
				}
			}
		}
		
		if (tmp > 0 && tmp == 1)
		{
			orderID.options[tmp].selected = true;			
			orderField.style.display = "none";			
			LightCart.SwitchLinkSelectDomain(token, root);
		}
		else if (tmp > 1) 
		{
			orderField.style.display = "";
			document.getElementById('jsn_lc_registered_domain_wrapper').style.display = 'none';
		}
		else
		{
			orderField.style.display = "none";
			document.getElementById('jsn_lc_registered_domain_wrapper').style.display = 'none';
		}	
	},
	resetFeedField: function()
	{
		document.getElementById('jsn_lc_contactform_order_field').style.display = 'none';
		document.getElementById('jsn_lc_registered_domain_wrapper').style.display = 'none';
		document.getElementById('website_url').value = '';
		document.getElementById('subject').value = '';
		document.getElementById('message').value = '';
		document.getElementById('product_unit_id').options[0].selected = true;
	},
	selectDomain: function (domain)
	{
		window.parent.document.getElementById('registered_domain').value = domain;	
		window.top.setTimeout('SqueezeBox.close();', 100);
	},
	scanAvailabelDiscountItems: function(containerID, numberOfItem)
	{
		var items 	= $$('.' + containerID);
		var counter = 0;
		items.each(function(item, i)
		{	
			item.addEvent('click', function(){
				LightCart.disableAvailabelDiscountItems(containerID, numberOfItem);
			});
		});
	},
	disableAvailabelDiscountItems: function(containerID, numberOfItem)
	{
		var items 	= $$('.' + containerID);
		var counter = 0;
		items.each(function(item, i)
		{
			if (item.checked)
			{
				counter = counter + 1;
			}
			
			if(counter >= numberOfItem)
			{
				items.each(function(subItem, j)
				{
					if (!subItem.checked)
					{
						subItem.disabled = true;
						subItem.checked  = false;
					}
				});
			}
			else
			{	
				item.disabled = false;
			}
		});		
	},
	getAvailabelDiscountItemValue: function(containerID)
	{	
		var items 	= $$('.' + containerID);
		var result	= new Array();
		var z 		= 0;
		items.each(function(item, i)
		{	
			if (item.checked)
			{
				result[z] = item.value;
				z += 1;
			}
		});
		if (result.length)
		{
			return result.join(',');
		}
		return '';
	},	
	addAvailabelDiscountOptionToCart: function(container, linkID, sessionID, numberOfItem, msg, root)
	{
		var result 			= '';
		var sessionID	 	= $(sessionID).value;	
		//var link   			= 'index.php?option=com_lightcart&view=vdiscountoptionscart&task=vdiscountoptionscart.autoredirect&session_id=' + sessionID;
		var link   			= root + 'index.php?option=com_lightcart&view=vcart&layout=discountoptionscart&tmpl=component&session_id=' + sessionID;
		var counter 		= 0;
		container.each(function(item)
		{	
			var tmpResult = LightCart.getAvailabelDiscountItemValue(item);
			if (tmpResult != '')
			{
				result += tmpResult + ',';
			}
		});
		if (result != '')
		{
			var tmpResult = result.slice(0, -1);
			counter 	  = tmpResult.split(',');
			if (counter.length == numberOfItem)
			{
				link = link + '&product_unit_id=' + tmpResult;
				JSNSqueezeBox.initialize({handler: 'iframe', size: {x: 750, y: 600}});
				JSNSqueezeBox.options.url = link;
				JSNSqueezeBox.fromElement();
				//window.top.location = link;
			}
			else
			{
				alert(msg);
			}
		}
		else
		{
			alert(msg);
		}
	},
	
	DeleteProduct:function(id, name, price, category){
		$('ajax-loading').setStyle('display', '');
		try 
		{
			dataLayer.push({"event":"removeFromCart","ecommerce":{"remove":{"products":[{"id":id,"name":name,"category":category,"quantity":1,"price":price}]}}});
		}
		catch(e)
		{
			if (window.console && window.console.log) 
			{
				console.log(e.message)
			}
			
		}	
	},
	
	displayCustomerCart: function (link)
	{
		JSNSqueezeBox.initialize({handler: 'iframe', size: {x: 750, y: 600}, onOpen: function () {document.body.style.overflow="hidden"; this.overlay.setStyles({width: '100%'});}, onClose: function () {document.body.style.overflow="auto";}});
		JSNSqueezeBox.options.url = link ;
		JSNSqueezeBox.fromElement();		
	},
	
	AddProductToCart:function(purchase, token, upgrade, upgradeSourceID, upgradeDestinationID, category, action, label, root, renew, price){
		//temporary comment for develoment
		try 
		{
			//_gaq.push(['_trackEvent', category, action, label, price]);
			//ga('send', 'event', category, action, label, price);
			dataLayer.push({
				  'event': 'addToCart',
				  'ecommerce': {
				    'add': {                                
				      'products': [{                        
				          'name': label,
				          'id': purchase,
				          'price': price,
				          'category': category,
				          'quantity': 1
				       }]
				    }
				  }
				});

		}
		catch(e)
		{
			if (window.console && window.console.log) 
			{
				console.log(e.message)
			}
			
		}	
		
		var referrer = top.location.href;
		
		if (referrer.indexOf("customerarea") != '-1')
		{
			referrer = '';
		}	

		var link = root + 'index.php?option=com_lightcart&view=vcart&task=vcart.addproduct&purchase='+purchase+'&'+token+'=1&tmpl=component';
		if (upgrade == '1')
		{
			link += '&us_id=' + upgradeSourceID + '&ud_id=' + upgradeDestinationID + '&upgrade=' + upgrade;
		}
		
		/*if (renew == '1')
		{
			link += '&renew=' + renew;
		}*/
		link += '&jsnref=' + referrer;

		JSNSqueezeBox.initialize({handler: 'iframe', size: {x: 750, y: 600}, onOpen: function () {document.body.style.overflow="hidden"; this.overlay.setStyles({width: '100%'});}, onClose: function () {document.body.style.overflow="auto";}});
		JSNSqueezeBox.options.url = link;
		JSNSqueezeBox.fromElement();	
	},
	AddRenewProductToCart:function(purchase, token, root, renewedOrderID, renewedOrderItemID){
		//temporary comment for develoment
	
		
		var referrer = top.location.href;
		
		if (referrer.indexOf("customerarea") != '-1')
		{
			referrer = '';
		}	

		var link = root + 'index.php?option=com_lightcart&view=vcart&task=vcart.addproduct&purchase='+purchase+'&'+token+'=1&tmpl=component';
		
		link += '&renewed_order_id=' + renewedOrderID + '&renewed_order_item_id=' + renewedOrderItemID + '&renew=1';
		
		link += '&jsnref=' + referrer;

		JSNSqueezeBox.initialize({handler: 'iframe', size: {x: 750, y: 600}, onOpen: function () {document.body.style.overflow="hidden"; this.overlay.setStyles({width: '100%'});}, onClose: function () {document.body.style.overflow="auto";}});
		JSNSqueezeBox.options.url = link;
		JSNSqueezeBox.fromElement();	
	},	
	AddBundleToCart:function(purchase, token, root, bundleName, bundleID) {	
		
		try 
		{
			dataLayer.push({
				  'event': 'addToCart',
				  'ecommerce': {
				    'add': {                                
				      'products': [{                        
				          'name': bundleName,
				          'id': bundleID,
				          'category': 'Bundle Category',
				          'quantity': 1
				       }]
				    }
				  }
				});	
		
		}
		catch(e)
		{
			if (window.console && window.console.log) 
			{
				console.log(e.message)
			}			
		}		
		var link = root + 'index.php?option=com_lightcart&view=vcart&task=vcart.addbundle&purchase=' + purchase + '&' + token + '=1&tmpl=component';
		JSNSqueezeBox.initialize({handler: 'iframe', size: {x: 750, y: 600}, onOpen: function () {document.body.style.overflow="hidden"; this.overlay.setStyles({width: '100%'});}, onClose: function () {document.body.style.overflow="auto";}});
		JSNSqueezeBox.options.url = link;
		JSNSqueezeBox.fromElement();
	},
	
	AddBundleToCartInModal:function(purchase, token, root) {
		if (window.top.document.id('jsn-lc-plugin-bundle') != null)
		{	
			window.top.document.id('jsn-lc-plugin-bundle').value = root + 'index.php?option=com_lightcart&view=vcart&task=vcart.addbundle&purchase=' + purchase + '&' + token + '=1&tmpl=component';
			window.top.setTimeout('SqueezeBox.close();');
		}
	},
	
	AddBundleToCartAfterModalClosed:function() {
		var link = '';
		
		if (window.top.document.id('jsn-lc-plugin-bundle') != null)
		{
			link = window.top.document.id('jsn-lc-plugin-bundle').value;
			window.top.document.id('jsn-lc-plugin-bundle').value = '';
		}
		
		if (link != '')
		{	
			JSNSqueezeBox.initialize({handler: 'iframe', size: {x: 750, y: 600}, onOpen: function () {document.body.style.overflow="hidden"; this.overlay.setStyles({width: '100%'});}, onClose: function () {document.body.style.overflow="auto";}});
			JSNSqueezeBox.options.url = link;
			JSNSqueezeBox.fromElement(); 
		}
		return false;
	}	
};

window.addEvent('domready', LightCart.init);

window.addEvent('domready', function() {
	
	if (typeof(SqueezeBox) == 'object')
	{	
		SqueezeBox.initialize({
			onClose: function() {
				if (window.top.document.id('jsn-lc-plugin-bundle') != null)
				{	
					if (window.top.document.id('jsn-lc-plugin-bundle').value != '')
					{
						LightCart.AddBundleToCartAfterModalClosed();
					}
				}
				
				if (window.top.document.id('jsn-lc-plugin-selected-bundle') != null)
				{	
					if (window.top.document.id('jsn-lc-plugin-selected-bundle').value != '')
					{
						JSNLightCartBundle.AddBundleToCartAfterModalClosed();
					}
				}				
			}
		});
	
		SqueezeBox.assign($$('a.modal'), {
			parse: 'rel'
		});
	}
});;


/* FILE: /plugins/content/jsnlightcart_bundle/assets/js/jsnlightcart_bundle.js */
var JSNLightCartBundle = {
	
	init: function() {
	},
	
	AddBundleToCart: function(classItem, token, root, bundleName, bundleID) {
		var combox 				= $$('select.' + classItem);
		var input				= $$('input.' + classItem);
		var valid				= true;	
		var invalidBundleMsg 	= 'This is an invalid bundle';
		
		if (combox == undefined && input == undefined)
		{
			alert(invalidBundleMsg);
			return false;
		}	
		
		var comboxLength 		= combox.length;
		var inputLength			= input.length;
		
		var productUnitID 		= '';
		
		
		if (!comboxLength && !inputLength)
		{
			alert(invalidBundleMsg);
			return false;
		}
		
		combox.each(function(item, index) {
			var itemSelected = item.getSelected();
			var itemSelectedLength = itemSelected.length;
			
			if (itemSelectedLength < item.getAttribute('maximumselectionsize'))
			{
				alert('Please select at least ' + item.getAttribute('maximumselectionsize') + ' products for this item');
				valid = false;
			}	
			
			if (itemSelectedLength)
			{
				for (var i = 0; i < itemSelectedLength; i++)
				{
					productUnitID += itemSelected[i].get("value");
					
					if (i < (itemSelectedLength - 1))
					{
						productUnitID += '|';
					}
				}
				
				if (index < (comboxLength - 1))
				{
					productUnitID += '|';
				}				
			}	
		});

		if (!valid) 
		{
			return false;
		}
		
		if (inputLength)
		{
			if (productUnitID != '')
			{
				productUnitID += '|';
			}
			
			input.each(function(item, index) {
				var subItems = JSON.parse(item.value);
				var subItemsLength = subItems.length;
				if (subItemsLength)
				{	
					subItems.each(function(subItem, subIndex) {
						productUnitID += subItem.id;
						if (subIndex < (subItemsLength - 1))
						{
							productUnitID += '|';
						}
					});
					
					if (index < (inputLength - 1))
					{
						productUnitID += '|';
					}
				}
			});
		}
		
		if (productUnitID != '')
		{
			try 
			{
				dataLayer.push({
					  'event': 'addToCart',
					  'ecommerce': {
					    'add': {                                
					      'products': [{                        
					          'name': bundleName,
					          'id': bundleID,
					          'category': 'Bundle Category',
					          'quantity': 1
					       }]
					    }
					  }
					});	
			
			}
			catch(e)
			{
				if (window.console && window.console.log) 
				{
					console.log(e.message)
				}			
			}
			var link = root + 'index.php?option=com_lightcart&view=vcart&task=vcart.addbundle&purchase=' + productUnitID + '&' + token + '=1&tmpl=component';
			JSNSqueezeBox.initialize({handler: 'iframe', size: {x: 750, y: 600}, onOpen: function () {document.body.style.overflow="hidden"; this.overlay.setStyles({width: '100%'});}, onClose: function () {document.body.style.overflow="auto";}});
			JSNSqueezeBox.options.url = link;
			JSNSqueezeBox.fromElement();
			return true;
		}
		else
		{
			alert(invalidBundleMsg);
			return false;
		}	
	},
	
	AddBundleToCartInModal: function(classItem, token, root) {	
		var combox 				= $$('select.' + classItem);
		var input				= $$('input.' + classItem);
		var valid				= true;			
		var invalidBundleMsg 	= 'This is an invalid bundle';
		
		if (combox == undefined && input == undefined)
		{
			alert(invalidBundleMsg);
			return false;
		}	
		
		var comboxLength 		= combox.length;
		var inputLength			= input.length;
		
		var productUnitID 		= '';
		
		
		if (!comboxLength && !inputLength)
		{
			alert(invalidBundleMsg);
			return false;
		}
		
		combox.each(function(item, index) {
			var itemSelected = item.getSelected();
			var itemSelectedLength = itemSelected.length;
			
			if (itemSelectedLength < item.getAttribute('maximumselectionsize'))
			{
				alert('Please select at least ' + item.getAttribute('maximumselectionsize') + ' products for this item');
				valid = false;
			}	
			
			if (itemSelectedLength)
			{
				for (var i = 0; i < itemSelectedLength; i++)
				{
					productUnitID += itemSelected[i].get("value");
					
					if (i < (itemSelectedLength - 1))
					{
						productUnitID += '|';
					}
				}
				
				if (index < (comboxLength - 1))
				{
					productUnitID += '|';
				}				
			}	
		});

		if (!valid) 
		{
			return false;
		}
		
		if (inputLength)
		{
			if (productUnitID != '')
			{
				productUnitID += '|';
			}
			
			input.each(function(item, index) {
				var subItems = JSON.parse(item.value);
				var subItemsLength = subItems.length;
				if (subItemsLength)
				{	
					subItems.each(function(subItem, subIndex) {
						productUnitID += subItem.id;
						if (subIndex < (subItemsLength - 1))
						{
							productUnitID += '|';
						}
					});
					
					if (index < (inputLength - 1))
					{
						productUnitID += '|';
					}
				}
			});
		}
		
		if (productUnitID != '')
		{
			if (window.top.document.id('jsn-lc-plugin-selected-bundle') != null)
			{	
				window.top.document.id('jsn-lc-plugin-selected-bundle').value = root + 'index.php?option=com_lightcart&view=vcart&task=vcart.addbundle&purchase=' + productUnitID + '&' + token + '=1&tmpl=component';
				window.top.setTimeout('SqueezeBox.close();');
			}
		}
		else
		{
			alert(invalidBundleMsg);
			return false;
		}	
	},
	
	AddBundleToCartAfterModalClosed:function() {
		var link = '';
		if (window.top.document.id('jsn-lc-plugin-selected-bundle') != null)
		{
			link = window.top.document.id('jsn-lc-plugin-selected-bundle').value;
			window.top.document.id('jsn-lc-plugin-selected-bundle').value = '';
		}
		
		if (link != '')
		{	
			JSNSqueezeBox.initialize({handler: 'iframe', size: {x: 750, y: 600}, onOpen: function () {document.body.style.overflow="hidden"; this.overlay.setStyles({width: '100%'});}, onClose: function () {document.body.style.overflow="auto";}});
			JSNSqueezeBox.options.url = link;
			JSNSqueezeBox.fromElement();
			
		}
		return false;
	}		
}
window.addEvent('domready', JSNLightCartBundle.init);;


/* FILE: /components/com_lightcart/assets/js/jsnmodal.js */
/**
 * SqueezeBox - Expandable Lightbox
 *
 * Allows to open various content as modal,
 * centered and animated box.
 *
 * Dependencies: MooTools 1.2 or newer
 *
 * Inspired by
 *  ... Lokesh Dhakar	- The original Lightbox v2
 *
 * @version		1.2
 *
 * @license		MIT-style license
 * @author		Harald Kirschner <mail [at] digitarald.de>
 * @author		Rouven We�ling <me [at] rouvenwessling.de>
 * @copyright	Author
 */

//Modified by JoomlaShine Team

var JSNSqueezeBox = {

	presets: {
		onOpen: function(){},
		onClose: function(){},
		onUpdate: function(){},
		onResize: function(){},
		onMove: function(){},
		onShow: function(){},
		onHide: function(){},
		size: {x: 600, y: 450},
		sizeLoading: {x: 200, y: 150},
		marginInner: {x: 20, y: 20},
		marginImage: {x: 50, y: 75},
		handler: false,
		target: null,
		closable: true,
		closeBtn: true,
		zIndex: 99999999,
		overlayOpacity: 0.7,
		classWindow: '',
		classOverlay: '',
		overlayFx: {},
		resizeFx: {},
		contentFx: {},
		parse: false, // 'rel'
		parseSecure: false,
		shadow: true,
		document: null,
		ajaxOptions: {}
	},

	initialize: function(presets) {
		if (this.options)
		{
			this.presets = Object.merge(this.presets, presets);
			this.setOptions(this.presets).build();
			return this;
		}

		this.presets = Object.merge(this.presets, presets);
		this.doc = this.presets.document || document;
		this.options = {};
		this.setOptions(this.presets).build();
		this.bound = {
			window: this.reposition.bind(this, [null]),
			scroll: this.checkTarget.bind(this),
			close: this.close.bind(this),
			key: this.onKey.bind(this)
		};
		this.isOpen = this.isLoading = false;
		return this;
	},

	build: function() {
		this.overlay = new Element('div', {
			id: 'jsn-lc-sbox-overlay',
			styles: {display: 'none', zIndex: this.options.zIndex}
		});
		this.win = new Element('div', {
			id: 'jsn-lc-sbox-window',
			styles: {display: 'none', zIndex: this.options.zIndex + 2}
		});
		if (this.options.shadow) {
			if (Browser.chrome
			|| (Browser.safari && Browser.version >= 3)
			|| (Browser.opera && Browser.version >= 10.5)
			|| (Browser.firefox && Browser.version >= 3.5)
			|| (Browser.ie && Browser.version >= 9)) {
				this.win.addClass('shadow');
			} else if (!Browser.ie6) {
				var shadow = new Element('div', {'class': 'sbox-bg-wrap'}).inject(this.win);
				var relay = function(e) {
					this.overlay.fireEvent('click', [e]);
				}.bind(this);
				['n', 'ne', 'e', 'se', 's', 'sw', 'w', 'nw'].each(function(dir) {
					new Element('div', {'class': 'sbox-bg sbox-bg-' + dir}).inject(shadow).addEvent('click', relay);
				});
			}
		}
		this.content = new Element('div', {id: 'jsn-lc-sbox-content'}).inject(this.win);
		this.closeBtn = new Element('a', {id: 'jsn-lc-sbox-btn-close', href: 'javascript: void(0);'}).inject(this.win);
		this.fx = {
			overlay: new Fx.Tween(this.overlay, Object.merge({
				property: 'opacity',
				onStart: Events.prototype.clearChain,
				duration: 100,
				link: 'cancel'
			}, this.options.overlayFx)).set(0),
			win: new Fx.Morph(this.win, Object.merge({
				onStart: Events.prototype.clearChain,
				unit: 'px',
				duration: 750,
				transition: Fx.Transitions.Quint.easeOut,
				link: 'cancel',
				unit: 'px'
			}, this.options.resizeFx)),
			content: new Fx.Tween(this.content, Object.merge({
				property: 'opacity',
				duration: 100,
				link: 'cancel'
			}, this.options.contentFx)).set(0)
		};
		document.id(this.doc.body).adopt(this.overlay, this.win);
	},

	assign: function(to, options) {
		return (document.id(to) || $$(to)).addEvent('click', function() {
			return !JSNSqueezeBox.fromElement(this, options);
		});
	},
	
	open: function(subject, options) {
		this.initialize();

		if (this.element != null) this.trash();
		this.element = document.id(subject) || false;

		this.setOptions(Object.merge(this.presets, options || {}));

		if (this.element && this.options.parse) {
			var obj = this.element.getProperty(this.options.parse);
			if (obj && (obj = JSON.decode(obj, this.options.parseSecure))) this.setOptions(obj);
		}
		//this.url = ((this.element) ? (this.element.get('href')) : subject) || this.options.url || '';
	/*	if (this.options.jsnlcClose != undefined)
		{
			if (!this.options.jsnlcClose)
			{	
				this.closeBtn.setStyle('display', 'none');
			}
			else
			{
				this.closeBtn.setStyle('display', 'block');
			}	
		}	
		else
		{
			this.closeBtn.setStyle('display', 'none');
		}	
		*/
		this.url = this.options.url;
		this.assignOptions();

		var handler = handler || this.options.handler;
		if (handler) return this.setContent(handler, this.parsers[handler].call(this, true));
		var ret = false;
		return this.parsers.some(function(parser, key) {
			var content = parser.call(this);
			if (content) {
				ret = this.setContent(key, content);
				return true;
			}
			return false;
		}, this);
	},
	
	fromElement: function(from, options) {
		return this.open(from, options);
	},

	assignOptions: function() {
		this.overlay.addClass(this.options.classOverlay);
		this.win.addClass(this.options.classWindow);
		if (Browser.ie6) this.win.addClass('sbox-window-ie6');
	},

	close: function(e) {
		var stoppable = (typeOf(e) == 'event');
		if (stoppable) e.stop();
		if (!this.isOpen || (stoppable && !Function.from(this.options.closable).call(this, e))) return this;
		this.fx.overlay.start(0).chain(this.toggleOverlay.bind(this));
		this.win.setStyle('display', 'none');
		this.fireEvent('onClose', [this.content]);
		this.trash();
		this.toggleListeners();
		this.isOpen = false;
		return this;
	},

	trash: function() {
		this.element = this.asset = null;
		this.content.empty();
		this.options = {};
		this.removeEvents().setOptions(this.presets).callChain();
	},

	onError: function() {
		this.asset = null;
		this.setContent('string', this.options.errorMsg || 'An error occurred');
	},

	setContent: function(handler, content) {
		if (!this.handlers[handler]) return false;
		this.content.className = 'sbox-content-' + handler;
		this.applyTimer = this.applyContent.delay(this.fx.overlay.options.duration, this, this.handlers[handler].call(this, content));
		if (this.overlay.retrieve('opacity')) return this;
		this.toggleOverlay(true);
		this.fx.overlay.start(this.options.overlayOpacity);
		return this.reposition();
	},

	applyContent: function(content, size) {
		if (!this.isOpen && !this.applyTimer) return;
		this.applyTimer = clearTimeout(this.applyTimer);
		this.hideContent();
		if (!content) {
			this.toggleLoading(true);
		} else {
			if (this.isLoading) this.toggleLoading(false);
			this.fireEvent('onUpdate', [this.content], 20);
		}
		if (content) {
			if (['string', 'array'].contains(typeOf(content))) {
				this.content.set('html', content);
			} else if (!(content !== this.content && this.content.contains(content))) {
				this.content.adopt(content);
			}
		}
		this.callChain();
		if (!this.isOpen) {
			this.toggleListeners(true);
			this.resize(size, true);
			this.isOpen = true;
			this.fireEvent('onOpen', [this.content]);
		} else {
			this.resize(size);
		}
	},

	resize: function(size, instantly) {
		this.showTimer = clearTimeout(this.showTimer || null);
		var box = this.doc.getSize(), scroll = this.doc.getScroll();
		this.size = Object.merge((this.isLoading) ? this.options.sizeLoading : this.options.size, size);
		var parentSize = self.getSize();
		if (this.size.x == parentSize.x) {
			this.size.y = this.size.y - 50;
			this.size.x = this.size.x - 20;
		}
		var to = {
			width: this.size.x,
			height: this.size.y,
			left: (scroll.x + (box.x - this.size.x - this.options.marginInner.x) / 2).toInt(),
			top: (scroll.y + (box.y - this.size.y - this.options.marginInner.y) / 2).toInt()
		};
		this.hideContent();
		if (!instantly) {
			this.fx.win.start(to).chain(this.showContent.bind(this));
		} else {
			this.win.setStyles(to).setStyle('display', '');
			this.showTimer = this.showContent.delay(50, this);
		}
		return this.reposition();
	},

	toggleListeners: function(state) {
		var fn = (state) ? 'addEvent' : 'removeEvent';
		this.closeBtn[fn]('click', this.bound.close);
		//this.overlay[fn]('click', this.bound.close);
		this.doc[fn]('keydown', this.bound.key)[fn]('mousewheel', this.bound.scroll);
		this.doc.getWindow()[fn]('resize', this.bound.window)[fn]('scroll', this.bound.window);
	},

	toggleLoading: function(state) {
		this.isLoading = state;
		this.win[(state) ? 'addClass' : 'removeClass']('sbox-loading');
		if (state) this.fireEvent('onLoading', [this.win]);
	},

	toggleOverlay: function(state) {
		var full = this.doc.getSize().x;
		this.overlay.setStyle('display', (state) ? '' : 'none');
		this.doc.body[(state) ? 'addClass' : 'removeClass']('body-overlayed');
		if (state) {
			this.scrollOffset = this.doc.getWindow().getSize().x - full;
		} else {
			this.doc.body.setStyle('margin-right', '');
		}
	},

	showContent: function() {
		if (this.content.get('opacity')) this.fireEvent('onShow', [this.win]);
		this.fx.content.start(1);
	},

	hideContent: function() {
		if (!this.content.get('opacity')) this.fireEvent('onHide', [this.win]);
		this.fx.content.cancel().set(0);
	},

	onKey: function(e) {
		switch (e.key) {
			case 'esc': this.close(e);
			case 'up': case 'down': return false;
		}
	},

	checkTarget: function(e) {
		return e.target !== this.content && this.content.contains(e.target);
	},

	reposition: function() {
		var size = this.doc.getSize(), scroll = this.doc.getScroll(), ssize = this.doc.getScrollSize();
		var over = this.overlay.getStyles('height');
		var j = parseInt(over.height);
		if (ssize.y > j && size.y >= j) {
			this.overlay.setStyles({
				width: ssize.x + 'px',
				height: ssize.y + 'px'
			});
			this.win.setStyles({
				left: (scroll.x + (size.x - this.win.offsetWidth) / 2 - this.scrollOffset).toInt() + 'px',
				top: (scroll.y + (size.y - this.win.offsetHeight) / 2).toInt() + 'px'
			});
		}
		return this.fireEvent('onMove', [this.overlay, this.win]);
	},

	removeEvents: function(type){
		if (!this.$events) return this;
		if (!type) this.$events = null;
		else if (this.$events[type]) this.$events[type] = null;
		return this;
	},

	extend: function(properties) {
		return Object.append(this, properties);
	},

	handlers: new Hash(),

	parsers: new Hash()
};

JSNSqueezeBox.extend(new Events(function(){})).extend(new Options(function(){})).extend(new Chain(function(){}));

JSNSqueezeBox.parsers.extend({

	image: function(preset) {
		return (preset || (/\.(?:jpg|png|gif)$/i).test(this.url)) ? this.url : false;
	},

	clone: function(preset) {
		if (document.id(this.options.target)) return document.id(this.options.target);
		if (this.element && !this.element.parentNode) return this.element;
		var bits = this.url.match(/#([\w-]+)$/);
		return (bits) ? document.id(bits[1]) : (preset ? this.element : false);
	},

	ajax: function(preset) {
		return (preset || (this.url && !(/^(?:javascript|#)/i).test(this.url))) ? this.url : false;
	},

	iframe: function(preset) {
		return (preset || this.url) ? this.url : false;
	},

	string: function(preset) {
		return true;
	}
});

JSNSqueezeBox.handlers.extend({

	image: function(url) {
		var size, tmp = new Image();
		this.asset = null;
		tmp.onload = tmp.onabort = tmp.onerror = (function() {
			tmp.onload = tmp.onabort = tmp.onerror = null;
			if (!tmp.width) {
				this.onError.delay(10, this);
				return;
			}
			var box = this.doc.getSize();
			box.x -= this.options.marginImage.x;
			box.y -= this.options.marginImage.y;
			size = {x: tmp.width, y: tmp.height};
			for (var i = 2; i--;) {
				if (size.x > box.x) {
					size.y *= box.x / size.x;
					size.x = box.x;
				} else if (size.y > box.y) {
					size.x *= box.y / size.y;
					size.y = box.y;
				}
			}
			size.x = size.x.toInt();
			size.y = size.y.toInt();
			this.asset = document.id(tmp);
			tmp = null;
			this.asset.width = size.x;
			this.asset.height = size.y;
			this.applyContent(this.asset, size);
		}).bind(this);
		tmp.src = url;
		if (tmp && tmp.onload && tmp.complete) tmp.onload();
		return (this.asset) ? [this.asset, size] : null;
	},

	clone: function(el) {
		if (el) return el.clone();
		return this.onError();
	},

	adopt: function(el) {
		if (el) return el;
		return this.onError();
	},

	ajax: function(url) {
		var options = this.options.ajaxOptions || {};
		this.asset = new Request.HTML(Object.merge({
			method: 'get',
			evalScripts: false
		}, this.options.ajaxOptions)).addEvents({
			onSuccess: function(resp) {
				this.applyContent(resp);
				if (options.evalScripts !== null && !options.evalScripts) Browser.exec(this.asset.response.javascript);
				this.fireEvent('onAjax', [resp, this.asset]);
				this.asset = null;
			}.bind(this),
			onFailure: this.onError.bind(this)
		});
		this.asset.send.delay(10, this.asset, [{url: url}]);
	},

	iframe: function(url) {
		this.asset = new Element('iframe', Object.merge({
			src: url,
			frameBorder: 0,
			id: new Date().getTime(),
			width: this.options.size.x,
			height: this.options.size.y
		}, this.options.iframeOptions));
		if (this.options.iframePreload) {
			this.asset.addEvent('load', function() {
				this.applyContent(this.asset.setStyle('display', ''));
			}.bind(this));
			this.asset.setStyle('display', 'none').inject(this.content);
			return false;
		}
		return this.asset;
	},

	string: function(str) {
		return str;
	}
});

JSNSqueezeBox.handlers.url = JSNSqueezeBox.handlers.ajax;
JSNSqueezeBox.parsers.url = JSNSqueezeBox.parsers.ajax;
JSNSqueezeBox.parsers.adopt = JSNSqueezeBox.parsers.clone;;
